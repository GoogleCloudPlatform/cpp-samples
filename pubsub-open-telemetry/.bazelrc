# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Use host-OS-specific config lines from bazelrc files.
build --enable_platform_specific_config=true

# The project requires C++ >= 14. By default Bazel adds `-std=c++0x` which
# disables C++14 features, even if the compilers defaults to C++ >= 14
build:linux --cxxopt=-std=c++14
build:macos --cxxopt=-std=c++14

# Do not create the convenience links. They are inconvenient when the build
# runs inside a docker image.
build --experimental_convenience_symlinks=ignore

# Enable OpenTelemetry tracing instrumentation for google-cloud-cpp.
build --@io_opentelemetry_cpp//api:with_abseil
build --@google_cloud_cpp//:enable_opentelemetry


# Clang Sanitizers, use with (for example):
#
# --client_env=CXX=clang++ --client_env=CC=clang --config asan
#

# --config sanitizer refactors comment settings for all sanitizers
build:sanitizer --strip=never
build:sanitizer --copt=-Og
build:sanitizer --copt=-g
build:sanitizer --copt=-fno-omit-frame-pointer

# --config asan: Address Sanitizer
build:asan --config=sanitizer
build:asan --copt=-fsanitize=address
# Protobuf enables -Werror by default. We are building with GCC 13. With
# -Werror and Address Sanitizer the compiler emits warnings in some of the
# Protobuf code, and that stops the build. It may be a compiler bug, or Protobuf
# may be assuming that some compiler flags are set when compiling with Address
# Sanitizier (-DADDRESS_SANITIZER=1 is one possibility).
build:asan --per_file_copt=com_google_protobuf//@-Wno-error
build:asan --linkopt=-fsanitize=address
build:asan --action_env=ASAN_OPTIONS=detect_leaks=1:color=always
build:asan --action_env=LSAN_OPTIONS=report_objects=1

# --config tsan: Thread Sanitizer
build:tsan --config=sanitizer
build:tsan --copt=-fsanitize=thread
build:tsan --linkopt=-fsanitize=thread
# report_atomic_races=0: https://github.com/google/sanitizers/issues/953
build:tsan --action_env=TSAN_OPTIONS=halt_on_error=1:second_deadlock_stack=1:report_atomic_races=0

# --config otel2: Open Telemetery ABI version 2
build:otel2 --cxxopt=-DOPENTELEMETRY_ABI_VERSION_NO=2
